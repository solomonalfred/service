"""schemas

Revision ID: 079c6b2344bd
Revises: 
Create Date: 2025-07-04 06:05:19.602248

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '079c6b2344bd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('type', sa.Enum('LE', 'NP', 'IE', 'SE', name='usertype'), nullable=False),
    sa.Column('role', sa.Enum('manager', 'employee', name='userrole'), server_default='employee', nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('shortname', sa.VARCHAR(length=255), nullable=True),
    sa.Column('tin', sa.String(length=12), nullable=True),
    sa.Column('ogrn', sa.String(length=15), nullable=True),
    sa.Column('kpp', sa.String(length=9), nullable=True),
    sa.Column('brand', sa.VARCHAR(length=255), nullable=True),
    sa.Column('manager_name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('manager_position', sa.VARCHAR(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.CheckConstraint("(type != 'LE' OR kpp IS NOT NULL)", name='chk_kpp_for_le'),
    sa.CheckConstraint("(type NOT IN ('LE', 'IE') OR ogrn IS NOT NULL)", name='chk_ogrn_required'),
    sa.CheckConstraint("(type NOT IN ('LE', 'IE', 'SE') OR tin IS NOT NULL)", name='chk_tin_required'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('address',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('legal_address', sa.VARCHAR(length=500), nullable=True),
    sa.Column('registration_address', sa.VARCHAR(length=500), nullable=False),
    sa.Column('actual_address', sa.VARCHAR(length=500), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('bank_details',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('bic', sa.String(length=9), nullable=False),
    sa.Column('bank_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('correspondent_account', sa.String(length=20), nullable=False),
    sa.Column('current_account', sa.String(length=20), nullable=False),
    sa.Column('comment', sa.VARCHAR(length=256), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('contacts',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('personal_phone', sa.String(length=20), nullable=False),
    sa.Column('extra_phone', sa.String(length=20), nullable=True),
    sa.Column('public_phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('whatsapp', sa.String(length=50), nullable=True),
    sa.Column('telegram', sa.String(length=50), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('passport_details',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('series', sa.String(length=4), nullable=False),
    sa.Column('number', sa.String(length=6), nullable=False),
    sa.Column('passport_issued', sa.VARCHAR(length=255), nullable=False),
    sa.Column('date_of_issued', sa.Date(), nullable=False),
    sa.Column('division_code', sa.String(length=7), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('passport_details')
    op.drop_table('contacts')
    op.drop_table('bank_details')
    op.drop_table('address')
    op.drop_table('users')
    # ### end Alembic commands ###
